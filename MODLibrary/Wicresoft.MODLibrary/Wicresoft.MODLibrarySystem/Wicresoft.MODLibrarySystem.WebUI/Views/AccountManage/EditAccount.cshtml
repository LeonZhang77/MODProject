@{
    ViewBag.Title = "Edit Account";
}
@model Wicresoft.MODLibrarySystem.WebUI.Models.AccountManage.EditAccountModel
@section scripts{
    @Scripts.Render("~/Scripts/AccountManageJS/EditAccount.js")
}

<h2>Edit Account</h2>
<h2><br /></h2>
@if (this.Model.IsSave)
{
    <h1><label class="label label-success">Update Success.</label></h1>
}
@using (Html.BeginForm("EditAccount", "AccountManage", FormMethod.Post, new { @role = "form" }))
{
    <div class="jumbotron">
        <div class="form-group">
            <label for="LoginName" class="col-sm-3 control-label">Login Name:   </label>
            @Html.TextBoxFor(m => m.LoginName, new { @class = "form-control", @readonly = "readonly" })
        </div>

        <div class="form-group">
            <label for="Email" class="col-sm-3 control-label">Email:   </label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })
        </div>

        <div class="form-group">
            <label for="DisplayName" class="col-sm-3 control-label">Display Name: <span class="requireSpan">*</span> </label>
            @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control" })
            <label id="DisplayName_errorData" errordatamessage="DisplayName is require and length must be less than 6 bytes." class="errorLable" />
        </div>

        <div class="form-group">
            <label for="RealName" class="col-sm-3 control-label">Real Name: <span class="requireSpan">*</span></label>
            @Html.TextBoxFor(m => m.RealName, new { @class = "form-control" })
            <label id="RealName_errorData" errordatamessage="RealName is require." class="errorLable" />
        </div>

        <div class="form-group">
            <label for="ChineseName" class="col-sm-3 control-label">Chinese Name:   </label>
            @Html.TextBoxFor(m => m.Chinese_Name, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label for="Grade" class="col-sm-3 control-label">Grade:   </label>
            @Html.TextBoxFor(m => m.Grade, new { @class = "form-control", @readonly = "readonly" })
        </div>

        <div class="form-group">
            <label for="LatePoint" class="col-sm-3 control-label">Late Point:   </label>
            @Html.TextBoxFor(m => m.Late_point, new { @class = "form-control", @readonly = "readonly" })
        </div>

        <div class="form-group">
            <label for="Wechat" class="col-sm-3 control-label">Wechat:   </label>
            @Html.TextBoxFor(m => m.Wechat, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label for="Floor" class="col-sm-3 control-label">Floor:   </label>
            @Html.DropDownListFor(m => m.SelectedFloor, this.Model.FloorList, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label for="PM" class="col-sm-3 control-label">PM:   </label>
            @Html.TextBoxFor(m => m.PM, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label for="Team" class="col-sm-3 control-label">Team:   </label>
            @Html.TextBoxFor(m => m.Team, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label for="Remark" class="col-sm-3 control-label">Remark:   </label>
            @Html.TextBoxFor(m => m.Remark, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <div class="col-sm-offset-10 col-sm-10">
                <input class="btn btn-success" type="submit" value="Edit" onclick="return bindConfrimDialog(this, 'edit', 'b', EditAccountSubmitValidation);" />
                @Html.ActionLink("Back", "Index", "Home", new { @class = "btn btn-warning" })
            </div>
        </div>

    </div>
}
