@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_NLayout.cshtml";
}

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="description" content="Expand, contract, animate forms with jQuery wihtout leaving the page" />
<meta name="keywords" content="expand, form, css3, jquery, animate, width, height, adapt, unobtrusive javascript" />
<link rel="stylesheet" type="text/css" href="~/Content/style.css" />

@model Wicresoft.MODLibrarySystem.WebUI.Models.LoginAndRegister.LoginAndRegisterModel

@section scripts{
    @Scripts.Render("~/Scripts/LoginJS/Login.js")
    @Scripts.Render("~/Scripts/RegisterJS/RegisterUserRegister.js")
    @Scripts.Render("~/Scripts/RegisterJS/IndexRegister.js")
}

<script src="~/Scripts/cufon-yui.js" type="text/javascript"></script>
<script src="~/Scripts/ChunkFive_400.font.js" type="text/javascript"></script>
<script type="text/javascript">
			Cufon.replace('h1',{ textShadow: '1px 1px #fff'});
			Cufon.replace('h2',{ textShadow: '1px 1px #fff'});
			Cufon.replace('h3',{ textShadow: '1px 1px #000'});
			Cufon.replace('.back');
</script>
<script src="~/Scripts/LoginAndRegisterJS/FormWrapper.js" type="text/javascript"></script>
<script src="~/Scripts/LoginAndRegisterJS/LoginAndRegister.js" type="text/javascript"></script>

<h2>MOD Library Login</h2>

<div class="wrapper">
    <div class="content">
        <div id="form_wrapper" class="form_wrapper">
            @using (Html.BeginForm("Index", "LoginAndRegister", FormMethod.Post, new { @role = "form", @class = "login" }))
            {
                <h3>Please Login</h3>
                if (this.Model.LoginIndexModel.IsFail)
                {
                    <span style="color:red">Login Fail. <br /> Please check username and password is correct</span>
                }
                <div>
                    <label for="LoginIndexModel.UserName">UserName: <span class="requireSpan">*</span></label>
                    @Html.TextBoxFor(m => this.Model.LoginIndexModel.UserName)
                    <label id="LoginIndexModel_UserName_errorData" errordatamessage="UserName is require." class="errorLable" />
                </div>
                <div>
                    <label for="LoginIndexModel.Password">Password: <span class="requireSpan">*</span></label>
                    @Html.TextBoxFor(m => this.Model.LoginIndexModel.Password, new { @type = "password" })
                    <label id="LoginIndexModel_Password_errorData" errordatamessage="Password is require." class="errorLable" />
                </div>
                <div class="bottom">
                    <input type="submit" value="Login" />
                    @Html.ActionLink("You don't have an account? Register here", "TurnToRegister", "LoginAndRegister", new { @class = "linkform", @rel = "register" })
                    <div class="clear"></div>
                </div>
            }
            @using (Html.BeginForm("Register", "LoginAndRegister", FormMethod.Post, new { @role = "form", @class = "register active" }))
            {
                <h3>Please Input Your Email</h3>
                if (this.Model.RegisterIndexModel.IsExist)
                {
                    <span style="color:red">Account exist. <br /> The email has been registered.</span>
                }
                <div>
                    <label for="Email">Email: <span class="requireSpan">*</span></label>
                    @Html.TextBoxFor(m => this.Model.RegisterIndexModel.Email, new { @type = "text" })
                    <label id="RegisterIndexModel_Email_errorData" errordatamessage="Email is require and should be a email format." class="errorLable" />
                </div>
                <div class="bottom">
                    <input type="submit" value="Next" />
                    @Html.ActionLink("You have an account already?", "Index", "LoginAndRegister", null, new { @class = "linkform", @rel = "login" })
                    <div class="clear"></div>
                </div>
            }
            @using (Html.BeginForm("RegisterUser", "LoginAndRegister", FormMethod.Post, new { @role = "form", @class = "registerUser" }))
            {
                <h3>Register Information</h3>
                if (this.Model.RegisterModel.ErrorState)
                {
                    <span style="color:red">@this.Model.RegisterModel.StateMessage</span>
                }
                <div class="column">
                    <div>
                        <label>DisplayName:<span class="requireSpan">*</span></label>
                        @Html.TextBoxFor(m => m.RegisterModel.DisplayName)
                        <label id="RegisterModel_DisplayName_errorData" errordatamessage="DisplayName is require and length must be less than 6 bytes." class="errorLable" />
                    </div>
                    <div>
                        <label>Real Name:<span class="requireSpan">*</span></label>
                        @Html.TextBoxFor(m => m.RegisterModel.RealName)
                        <label id="RegisterModel_RealName_errorData" errordatamessage="RealName is require." class="errorLable" />
                    </div>
                    <div>
                        <label>Login Name:<span class="requireSpan">*</span></label>
                        @Html.TextBoxFor(m => m.RegisterModel.LoginName)
                        <label id="RegisterModel_LoginName_errorData" errordatamessage="LoginName is require." class="errorLable" />
                    </div>
                </div>
                <div class="column">
                    <div>
                        <label>Password:<span class="requireSpan">*</span></label>
                        @Html.TextBoxFor(m => m.RegisterModel.Password, new { @id = "Password", @type = "password" })
                        <label id="RegisterModel_Password_errorData" errordatamessage="Password is require." class="errorLable" />
                    </div>
                    <div>
                        <label>Confirm Password:<span class="requireSpan">*</span></label>
                        <input type="password" id="rePassword" />
                        <label id="rePassword_errorData" class="errorLable" />
                    </div>
                    <div>
                        <label>Email:<span class="requireSpan">*</span></label>
                        @Html.TextBoxFor(m => m.RegisterModel.Email, new Dictionary<string, object>() { { "readonly", "true" } })
                        <label id="RegisterModel_Email_errorData" errordatamessage="Email is require and must be a email address." class="errorLable" />
                    </div>
                    <div>
                        <label>Wechat:</label>
                        @Html.TextBoxFor(m => m.RegisterModel.Wechat)
                    </div>
                </div>
                <div class="bottom">
                    <input type="submit" value="Register" />
                    @Html.ActionLink("You have an account already?", "Index", "LoginAndRegister", null, new { @class = "linkform", @rel = "login" })
                    <div class="clear"></div>
                </div>
            }
        </div>
        <div class="clear"></div>
    </div>
</div>

